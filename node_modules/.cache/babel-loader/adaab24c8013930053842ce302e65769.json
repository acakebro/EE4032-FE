{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { DynamicBytesCoder } from \"./bytes\";\nexport var StringCoder = /*#__PURE__*/function (_DynamicBytesCoder) {\n  _inherits(StringCoder, _DynamicBytesCoder);\n  var _super = _createSuper(StringCoder);\n  function StringCoder(localName) {\n    _classCallCheck(this, StringCoder);\n    return _super.call(this, \"string\", localName);\n  }\n  _createClass(StringCoder, [{\n    key: \"defaultValue\",\n    value: function defaultValue() {\n      return \"\";\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(writer, value) {\n      return _get(_getPrototypeOf(StringCoder.prototype), \"encode\", this).call(this, writer, toUtf8Bytes(value));\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(reader) {\n      return toUtf8String(_get(_getPrototypeOf(StringCoder.prototype), \"decode\", this).call(this, reader));\n    }\n  }]);\n  return StringCoder;\n}(DynamicBytesCoder);","map":{"version":3,"mappings":"AAAA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEb,SAASA,WAAW,EAAEC,YAAY,QAAQ,wBAAwB;AAGlE,SAASC,iBAAiB,QAAQ,SAAS;AAE3C,WAAaC,WAAY;EAAA;EAAA;EAErB,qBAAYC,SAAiB;IAAA;IAAA,yBACnB,QAAQ,EAAEA,SAAS;EAC7B;EAAC;IAAA;IAAA,OAED,wBAAY;MACR,OAAO,EAAE;IACb;EAAC;IAAA;IAAA,OAED,gBAAOC,MAAc,EAAEC,KAAU;MAC7B,+EAAoBD,MAAM,EAAEL,WAAW,CAACM,KAAK,CAAC;IAClD;EAAC;IAAA;IAAA,OAED,gBAAOC,MAAc;MACjB,OAAON,YAAY,yEAAcM,MAAM,EAAE;IAC7C;EAAC;EAAA;AAAA,EAhB4BL,iBAAiB","names":["toUtf8Bytes","toUtf8String","DynamicBytesCoder","StringCoder","localName","writer","value","reader"],"sources":["/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@ethersproject/abi/src.ts/coders/string.ts"],"sourcesContent":["\"use strict\";\n\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Reader, Writer } from \"./abstract-coder\";\nimport { DynamicBytesCoder } from \"./bytes\";\n\nexport class StringCoder extends DynamicBytesCoder {\n\n    constructor(localName: string) {\n        super(\"string\", localName);\n    }\n\n    defaultValue(): string {\n        return \"\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n\n    decode(reader: Reader): any {\n        return toUtf8String(super.decode(reader));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}