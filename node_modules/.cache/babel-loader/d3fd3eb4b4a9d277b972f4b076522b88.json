{"ast":null,"code":"import _slicedToArray from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport sync from 'framesync';\nimport { useEffect } from 'react';\nimport { useInstantLayoutTransition } from '../projection/use-instant-layout-transition.mjs';\nimport { useForceUpdate } from './use-force-update.mjs';\nimport { instantAnimationState } from './use-instant-transition-state.mjs';\nfunction useInstantTransition() {\n  var _useForceUpdate = useForceUpdate(),\n    _useForceUpdate2 = _slicedToArray(_useForceUpdate, 2),\n    forceUpdate = _useForceUpdate2[0],\n    forcedRenderCount = _useForceUpdate2[1];\n  var startInstantLayoutTransition = useInstantLayoutTransition();\n  useEffect(function () {\n    /**\n     * Unblock after two animation frames, otherwise this will unblock too soon.\n     */\n    sync.postRender(function () {\n      return sync.postRender(function () {\n        return instantAnimationState.current = false;\n      });\n    });\n  }, [forcedRenderCount]);\n  return function (callback) {\n    startInstantLayoutTransition(function () {\n      instantAnimationState.current = true;\n      forceUpdate();\n      callback();\n    });\n  };\n}\nexport { useInstantTransition };","map":{"version":3,"names":["sync","useEffect","useInstantLayoutTransition","useForceUpdate","instantAnimationState","useInstantTransition","forceUpdate","forcedRenderCount","startInstantLayoutTransition","postRender","current","callback"],"sources":["/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/framer-motion/dist/es/utils/use-instant-transition.mjs"],"sourcesContent":["import sync from 'framesync';\nimport { useEffect } from 'react';\nimport { useInstantLayoutTransition } from '../projection/use-instant-layout-transition.mjs';\nimport { useForceUpdate } from './use-force-update.mjs';\nimport { instantAnimationState } from './use-instant-transition-state.mjs';\n\nfunction useInstantTransition() {\n    const [forceUpdate, forcedRenderCount] = useForceUpdate();\n    const startInstantLayoutTransition = useInstantLayoutTransition();\n    useEffect(() => {\n        /**\n         * Unblock after two animation frames, otherwise this will unblock too soon.\n         */\n        sync.postRender(() => sync.postRender(() => (instantAnimationState.current = false)));\n    }, [forcedRenderCount]);\n    return (callback) => {\n        startInstantLayoutTransition(() => {\n            instantAnimationState.current = true;\n            forceUpdate();\n            callback();\n        });\n    };\n}\n\nexport { useInstantTransition };\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,WAAW;AAC5B,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,0BAA0B,QAAQ,iDAAiD;AAC5F,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,qBAAqB,QAAQ,oCAAoC;AAE1E,SAASC,oBAAoB,GAAG;EAC5B,sBAAyCF,cAAc,EAAE;IAAA;IAAlDG,WAAW;IAAEC,iBAAiB;EACrC,IAAMC,4BAA4B,GAAGN,0BAA0B,EAAE;EACjED,SAAS,CAAC,YAAM;IACZ;AACR;AACA;IACQD,IAAI,CAACS,UAAU,CAAC;MAAA,OAAMT,IAAI,CAACS,UAAU,CAAC;QAAA,OAAOL,qBAAqB,CAACM,OAAO,GAAG,KAAK;MAAA,CAAC,CAAC;IAAA,EAAC;EACzF,CAAC,EAAE,CAACH,iBAAiB,CAAC,CAAC;EACvB,OAAO,UAACI,QAAQ,EAAK;IACjBH,4BAA4B,CAAC,YAAM;MAC/BJ,qBAAqB,CAACM,OAAO,GAAG,IAAI;MACpCJ,WAAW,EAAE;MACbK,QAAQ,EAAE;IACd,CAAC,CAAC;EACN,CAAC;AACL;AAEA,SAASN,oBAAoB"},"metadata":{},"sourceType":"module"}