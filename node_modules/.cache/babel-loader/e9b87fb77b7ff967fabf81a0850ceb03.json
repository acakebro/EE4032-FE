{"ast":null,"code":"import _slicedToArray from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"transition\", \"transitionEnd\"];\nimport { useState, useEffect } from 'react';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { getOrigin, checkTargetForNewValues } from '../render/utils/setters.mjs';\nimport { visualElement } from '../render/index.mjs';\nimport { animateVisualElement } from '../render/utils/animation.mjs';\nimport { makeUseVisualState } from '../motion/utils/use-visual-state.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nvar createObject = function createObject() {\n  return {};\n};\nvar stateVisualElement = visualElement({\n  build: function build() {},\n  measureViewportBox: createBox,\n  resetTransform: function resetTransform() {},\n  restoreTransform: function restoreTransform() {},\n  removeValueFromRenderState: function removeValueFromRenderState() {},\n  render: function render() {},\n  scrapeMotionValuesFromProps: createObject,\n  readValueFromInstance: function readValueFromInstance(_state, key, options) {\n    return options.initialState[key] || 0;\n  },\n  makeTargetAnimatable: function makeTargetAnimatable(element, _ref) {\n    var transition = _ref.transition,\n      transitionEnd = _ref.transitionEnd,\n      target = _objectWithoutProperties(_ref, _excluded);\n    var origin = getOrigin(target, transition || {}, element);\n    checkTargetForNewValues(element, target, origin);\n    return _objectSpread({\n      transition: transition,\n      transitionEnd: transitionEnd\n    }, target);\n  }\n});\nvar useVisualState = makeUseVisualState({\n  scrapeMotionValuesFromProps: createObject,\n  createRenderState: createObject\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n */\nfunction useAnimatedState(initialState) {\n  var _useState = useState(initialState),\n    _useState2 = _slicedToArray(_useState, 2),\n    animationState = _useState2[0],\n    setAnimationState = _useState2[1];\n  var visualState = useVisualState({}, false);\n  var element = useConstant(function () {\n    return stateVisualElement({\n      props: {},\n      visualState: visualState\n    }, {\n      initialState: initialState\n    });\n  });\n  useEffect(function () {\n    element.mount({});\n    return element.unmount;\n  }, [element]);\n  useEffect(function () {\n    element.setProps({\n      onUpdate: function onUpdate(v) {\n        setAnimationState(_objectSpread({}, v));\n      }\n    });\n  }, [setAnimationState, element]);\n  var startAnimation = useConstant(function () {\n    return function (animationDefinition) {\n      return animateVisualElement(element, animationDefinition);\n    };\n  });\n  return [animationState, startAnimation];\n}\nexport { useAnimatedState };","map":{"version":3,"names":["useState","useEffect","useConstant","getOrigin","checkTargetForNewValues","visualElement","animateVisualElement","makeUseVisualState","createBox","createObject","stateVisualElement","build","measureViewportBox","resetTransform","restoreTransform","removeValueFromRenderState","render","scrapeMotionValuesFromProps","readValueFromInstance","_state","key","options","initialState","makeTargetAnimatable","element","transition","transitionEnd","target","origin","useVisualState","createRenderState","useAnimatedState","animationState","setAnimationState","visualState","props","mount","unmount","setProps","onUpdate","v","startAnimation","animationDefinition"],"sources":["/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/framer-motion/dist/es/animation/use-animated-state.mjs"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { getOrigin, checkTargetForNewValues } from '../render/utils/setters.mjs';\nimport { visualElement } from '../render/index.mjs';\nimport { animateVisualElement } from '../render/utils/animation.mjs';\nimport { makeUseVisualState } from '../motion/utils/use-visual-state.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\n\nconst createObject = () => ({});\nconst stateVisualElement = visualElement({\n    build() { },\n    measureViewportBox: createBox,\n    resetTransform() { },\n    restoreTransform() { },\n    removeValueFromRenderState() { },\n    render() { },\n    scrapeMotionValuesFromProps: createObject,\n    readValueFromInstance(_state, key, options) {\n        return options.initialState[key] || 0;\n    },\n    makeTargetAnimatable(element, { transition, transitionEnd, ...target }) {\n        const origin = getOrigin(target, transition || {}, element);\n        checkTargetForNewValues(element, target, origin);\n        return { transition, transitionEnd, ...target };\n    },\n});\nconst useVisualState = makeUseVisualState({\n    scrapeMotionValuesFromProps: createObject,\n    createRenderState: createObject,\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n */\nfunction useAnimatedState(initialState) {\n    const [animationState, setAnimationState] = useState(initialState);\n    const visualState = useVisualState({}, false);\n    const element = useConstant(() => stateVisualElement({ props: {}, visualState }, { initialState }));\n    useEffect(() => {\n        element.mount({});\n        return element.unmount;\n    }, [element]);\n    useEffect(() => {\n        element.setProps({\n            onUpdate: (v) => {\n                setAnimationState({ ...v });\n            },\n        });\n    }, [setAnimationState, element]);\n    const startAnimation = useConstant(() => (animationDefinition) => {\n        return animateVisualElement(element, animationDefinition);\n    });\n    return [animationState, startAnimation];\n}\n\nexport { useAnimatedState };\n"],"mappings":";;;;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,SAAS,EAAEC,uBAAuB,QAAQ,6BAA6B;AAChF,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,oBAAoB,QAAQ,+BAA+B;AACpE,SAASC,kBAAkB,QAAQ,sCAAsC;AACzE,SAASC,SAAS,QAAQ,mCAAmC;AAE7D,IAAMC,YAAY,GAAG,SAAfA,YAAY;EAAA,OAAU,CAAC,CAAC;AAAA,CAAC;AAC/B,IAAMC,kBAAkB,GAAGL,aAAa,CAAC;EACrCM,KAAK,mBAAG,CAAE,CAAC;EACXC,kBAAkB,EAAEJ,SAAS;EAC7BK,cAAc,4BAAG,CAAE,CAAC;EACpBC,gBAAgB,8BAAG,CAAE,CAAC;EACtBC,0BAA0B,wCAAG,CAAE,CAAC;EAChCC,MAAM,oBAAG,CAAE,CAAC;EACZC,2BAA2B,EAAER,YAAY;EACzCS,qBAAqB,iCAACC,MAAM,EAAEC,GAAG,EAAEC,OAAO,EAAE;IACxC,OAAOA,OAAO,CAACC,YAAY,CAACF,GAAG,CAAC,IAAI,CAAC;EACzC,CAAC;EACDG,oBAAoB,gCAACC,OAAO,QAA4C;IAAA,IAAxCC,UAAU,QAAVA,UAAU;MAAEC,aAAa,QAAbA,aAAa;MAAKC,MAAM;IAChE,IAAMC,MAAM,GAAGzB,SAAS,CAACwB,MAAM,EAAEF,UAAU,IAAI,CAAC,CAAC,EAAED,OAAO,CAAC;IAC3DpB,uBAAuB,CAACoB,OAAO,EAAEG,MAAM,EAAEC,MAAM,CAAC;IAChD;MAASH,UAAU,EAAVA,UAAU;MAAEC,aAAa,EAAbA;IAAa,GAAKC,MAAM;EACjD;AACJ,CAAC,CAAC;AACF,IAAME,cAAc,GAAGtB,kBAAkB,CAAC;EACtCU,2BAA2B,EAAER,YAAY;EACzCqB,iBAAiB,EAAErB;AACvB,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA,SAASsB,gBAAgB,CAACT,YAAY,EAAE;EACpC,gBAA4CtB,QAAQ,CAACsB,YAAY,CAAC;IAAA;IAA3DU,cAAc;IAAEC,iBAAiB;EACxC,IAAMC,WAAW,GAAGL,cAAc,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;EAC7C,IAAML,OAAO,GAAGtB,WAAW,CAAC;IAAA,OAAMQ,kBAAkB,CAAC;MAAEyB,KAAK,EAAE,CAAC,CAAC;MAAED,WAAW,EAAXA;IAAY,CAAC,EAAE;MAAEZ,YAAY,EAAZA;IAAa,CAAC,CAAC;EAAA,EAAC;EACnGrB,SAAS,CAAC,YAAM;IACZuB,OAAO,CAACY,KAAK,CAAC,CAAC,CAAC,CAAC;IACjB,OAAOZ,OAAO,CAACa,OAAO;EAC1B,CAAC,EAAE,CAACb,OAAO,CAAC,CAAC;EACbvB,SAAS,CAAC,YAAM;IACZuB,OAAO,CAACc,QAAQ,CAAC;MACbC,QAAQ,EAAE,kBAACC,CAAC,EAAK;QACbP,iBAAiB,mBAAMO,CAAC,EAAG;MAC/B;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,CAACP,iBAAiB,EAAET,OAAO,CAAC,CAAC;EAChC,IAAMiB,cAAc,GAAGvC,WAAW,CAAC;IAAA,OAAM,UAACwC,mBAAmB,EAAK;MAC9D,OAAOpC,oBAAoB,CAACkB,OAAO,EAAEkB,mBAAmB,CAAC;IAC7D,CAAC;EAAA,EAAC;EACF,OAAO,CAACV,cAAc,EAAES,cAAc,CAAC;AAC3C;AAEA,SAASV,gBAAgB"},"metadata":{},"sourceType":"module"}