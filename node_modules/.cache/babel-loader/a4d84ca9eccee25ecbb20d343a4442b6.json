{"ast":null,"code":"import _classCallCheck from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nvar defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\nfunction getHost(name) {\n  switch (name) {\n    case \"homestead\":\n      return \"rpc.ankr.com/eth/\";\n    case \"ropsten\":\n      return \"rpc.ankr.com/eth_ropsten/\";\n    case \"rinkeby\":\n      return \"rpc.ankr.com/eth_rinkeby/\";\n    case \"goerli\":\n      return \"rpc.ankr.com/eth_goerli/\";\n    case \"matic\":\n      return \"rpc.ankr.com/polygon/\";\n    case \"arbitrum\":\n      return \"rpc.ankr.com/arbitrum/\";\n  }\n  return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\nexport var AnkrProvider = /*#__PURE__*/function (_UrlJsonRpcProvider) {\n  _inherits(AnkrProvider, _UrlJsonRpcProvider);\n  var _super = _createSuper(AnkrProvider);\n  function AnkrProvider() {\n    _classCallCheck(this, AnkrProvider);\n    return _super.apply(this, arguments);\n  }\n  _createClass(AnkrProvider, [{\n    key: \"isCommunityResource\",\n    value: function isCommunityResource() {\n      return this.apiKey === defaultApiKey;\n    }\n  }], [{\n    key: \"getApiKey\",\n    value: function getApiKey(apiKey) {\n      if (apiKey == null) {\n        return defaultApiKey;\n      }\n      return apiKey;\n    }\n  }, {\n    key: \"getUrl\",\n    value: function getUrl(network, apiKey) {\n      if (apiKey == null) {\n        apiKey = defaultApiKey;\n      }\n      var connection = {\n        allowGzip: true,\n        url: \"https:/\\/\" + getHost(network.name) + apiKey,\n        throttleCallback: function throttleCallback(attempt, url) {\n          if (apiKey.apiKey === defaultApiKey) {\n            showThrottleMessage();\n          }\n          return Promise.resolve(true);\n        }\n      };\n      if (apiKey.projectSecret != null) {\n        connection.user = \"\";\n        connection.password = apiKey.projectSecret;\n      }\n      return connection;\n    }\n  }]);\n  return AnkrProvider;\n}(UrlJsonRpcProvider);","map":{"version":3,"mappings":";;;;AAGA,SAASA,mBAAmB,QAAQ,aAAa;AACjD,SAASC,kBAAkB,QAAQ,yBAAyB;AAI5D,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,OAAO,QAAQ,YAAY;AACpC,IAAMC,MAAM,GAAG,IAAIF,MAAM,CAACC,OAAO,CAAC;AAGlC,IAAME,aAAa,GAAG,kEAAkE;AAExF,SAASC,OAAO,CAACC,IAAY;EACzB,QAAQA,IAAI;IACR,KAAK,WAAW;MACZ,OAAO,mBAAmB;IAC9B,KAAK,SAAS;MACV,OAAO,2BAA2B;IACtC,KAAK,SAAS;MACV,OAAO,2BAA2B;IACtC,KAAK,QAAQ;MACT,OAAO,0BAA0B;IAErC,KAAK,OAAO;MACR,OAAO,uBAAuB;IAElC,KAAK,UAAU;MACX,OAAO,wBAAwB;EAAC;EAExC,OAAOH,MAAM,CAACI,kBAAkB,CAAC,qBAAqB,EAAE,MAAM,EAAED,IAAI,CAAC;AACzE;AAEA,WAAaE,YAAa;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAGtB,+BAAmB;MACf,OAAQ,IAAI,CAACC,MAAM,KAAKL,aAAa;IACzC;EAAC;IAAA;IAAA,OAED,mBAAiBK,MAAW;MACxB,IAAIA,MAAM,IAAI,IAAI,EAAE;QAAE,OAAOL,aAAa;;MAC1C,OAAOK,MAAM;IACjB;EAAC;IAAA;IAAA,OAED,gBAAcC,OAAgB,EAAED,MAAW;MACvC,IAAIA,MAAM,IAAI,IAAI,EAAE;QAAEA,MAAM,GAAGL,aAAa;;MAC5C,IAAMO,UAAU,GAAmB;QAC/BC,SAAS,EAAE,IAAI;QACfC,GAAG,EAAG,WAAW,GAAGR,OAAO,CAACK,OAAO,CAACJ,IAAI,CAAC,GAAGG,MAAO;QACnDK,gBAAgB,EAAE,0BAACC,OAAe,EAAEF,GAAW,EAAI;UAC/C,IAAIJ,MAAM,CAACA,MAAM,KAAKL,aAAa,EAAE;YACjCL,mBAAmB,EAAE;;UAEzB,OAAOiB,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;QAChC;OACH;MAED,IAAIR,MAAM,CAACS,aAAa,IAAI,IAAI,EAAE;QAC9BP,UAAU,CAACQ,IAAI,GAAG,EAAE;QACpBR,UAAU,CAACS,QAAQ,GAAGX,MAAM,CAACS,aAAa;;MAG9C,OAAOP,UAAU;IACrB;EAAC;EAAA;AAAA,EA/B6BX,kBAAkB","names":["showThrottleMessage","UrlJsonRpcProvider","Logger","version","logger","defaultApiKey","getHost","name","throwArgumentError","AnkrProvider","apiKey","network","connection","allowGzip","url","throttleCallback","attempt","Promise","resolve","projectSecret","user","password"],"sources":["/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@ethersproject/providers/src.ts/ankr-provider.ts"],"sourcesContent":["\nimport { Network } from \"@ethersproject/networks\";\n\nimport { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport type { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\n\nfunction getHost(name: string): string {\n    switch (name) {\n        case \"homestead\":\n            return \"rpc.ankr.com/eth/\";\n        case \"ropsten\":\n            return \"rpc.ankr.com/eth_ropsten/\";\n        case \"rinkeby\":\n            return \"rpc.ankr.com/eth_rinkeby/\";\n        case \"goerli\":\n            return \"rpc.ankr.com/eth_goerli/\";\n\n        case \"matic\":\n            return \"rpc.ankr.com/polygon/\";\n\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum/\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\n\nexport class AnkrProvider extends UrlJsonRpcProvider {\n    readonly apiKey: string;\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        if (apiKey == null) { apiKey = defaultApiKey; }\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\\/\" + getHost(network.name) + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}