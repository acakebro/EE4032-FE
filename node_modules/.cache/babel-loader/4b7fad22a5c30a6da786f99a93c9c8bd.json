{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\n// @TODO: Merge this with bytes\nexport var FixedBytesCoder = /*#__PURE__*/function (_Coder) {\n  _inherits(FixedBytesCoder, _Coder);\n  var _super = _createSuper(FixedBytesCoder);\n  function FixedBytesCoder(size, localName) {\n    var _this;\n    _classCallCheck(this, FixedBytesCoder);\n    var name = \"bytes\" + String(size);\n    _this = _super.call(this, name, name, localName, false);\n    _this.size = size;\n    return _this;\n  }\n  _createClass(FixedBytesCoder, [{\n    key: \"defaultValue\",\n    value: function defaultValue() {\n      return \"0x0000000000000000000000000000000000000000000000000000000000000000\".substring(0, 2 + this.size * 2);\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(writer, value) {\n      var data = arrayify(value);\n      if (data.length !== this.size) {\n        this._throwError(\"incorrect data length\", value);\n      }\n      return writer.writeBytes(data);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(reader) {\n      return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n  }]);\n  return FixedBytesCoder;\n}(Coder);","map":{"version":3,"mappings":"AAAA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAEb,SAASA,QAAQ,EAAaC,OAAO,QAAQ,sBAAsB;AAEnE,SAASC,KAAK,QAAwB,kBAAkB;AAExD;AACA,WAAaC,eAAgB;EAAA;EAAA;EAGzB,yBAAYC,IAAY,EAAEC,SAAiB;IAAA;IAAA;IACvC,IAAIC,IAAI,GAAG,OAAO,GAAGC,MAAM,CAACH,IAAI,CAAC;IACjC,0BAAME,IAAI,EAAEA,IAAI,EAAED,SAAS,EAAE,KAAK;IAClC,MAAKD,IAAI,GAAGA,IAAI;IAAC;EACrB;EAAC;IAAA;IAAA,OAED,wBAAY;MACR,OAAQ,oEAAoE,CAAEI,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAACJ,IAAI,GAAG,CAAC,CAAC;IACjH;EAAC;IAAA;IAAA,OAED,gBAAOK,MAAc,EAAEC,KAAgB;MACnC,IAAIC,IAAI,GAAGX,QAAQ,CAACU,KAAK,CAAC;MAC1B,IAAIC,IAAI,CAACC,MAAM,KAAK,IAAI,CAACR,IAAI,EAAE;QAAE,IAAI,CAACS,WAAW,CAAC,uBAAuB,EAAEH,KAAK,CAAC;;MACjF,OAAOD,MAAM,CAACK,UAAU,CAACH,IAAI,CAAC;IAClC;EAAC;IAAA;IAAA,OAED,gBAAOI,MAAc;MACjB,OAAOA,MAAM,CAACC,MAAM,CAAC,IAAI,CAACV,IAAI,EAAEL,OAAO,CAACc,MAAM,CAACE,SAAS,CAAC,IAAI,CAACb,IAAI,CAAC,CAAC,CAAC;IACzE;EAAC;EAAA;AAAA,EArBgCF,KAAK","names":["arrayify","hexlify","Coder","FixedBytesCoder","size","localName","name","String","substring","writer","value","data","length","_throwError","writeBytes","reader","coerce","readBytes"],"sources":["/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@ethersproject/abi/src.ts/coders/fixed-bytes.ts"],"sourcesContent":["\"use strict\";\n\nimport { arrayify, BytesLike, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    readonly size: number;\n\n    constructor(size: number, localName: string) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n\n    defaultValue(): string {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n\n    encode(writer: Writer, value: BytesLike): number {\n        let data = arrayify(value);\n        if (data.length !== this.size) { this._throwError(\"incorrect data length\", value); }\n        return writer.writeBytes(data);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}