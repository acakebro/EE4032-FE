{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use strict';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n\n/**\n * Unescape and unwrap key for human-readable display\n *\n * @param {string} key to unescape.\n * @return {string} the unescaped key.\n */\nfunction unescape(key) {\n  var unescapeRegex = /(=0|=2)/g;\n  var unescaperLookup = {\n    '=0': '=',\n    '=2': ':'\n  };\n  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n    return unescaperLookup[match];\n  });\n}\nvar KeyEscapeUtils = {\n  escape: escape,\n  unescape: unescape\n};\nmodule.exports = KeyEscapeUtils;","map":{"version":3,"names":["escape","key","escapeRegex","escaperLookup","escapedString","replace","match","unescape","unescapeRegex","unescaperLookup","keySubstring","substring","KeyEscapeUtils","module","exports"],"sources":["/Users/hamsterpapa/Documents/GitHub/EE4032-FE/node_modules/react-bouncing-text/node_modules/react/lib/KeyEscapeUtils.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use strict';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * Unescape and unwrap key for human-readable display\n *\n * @param {string} key to unescape.\n * @return {string} the unescaped key.\n */\nfunction unescape(key) {\n  var unescapeRegex = /(=0|=2)/g;\n  var unescaperLookup = {\n    '=0': '=',\n    '=2': ':'\n  };\n  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n\n  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n    return unescaperLookup[match];\n  });\n}\n\nvar KeyEscapeUtils = {\n  escape: escape,\n  unescape: unescape\n};\n\nmodule.exports = KeyEscapeUtils;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,MAAM,CAACC,GAAG,EAAE;EACnB,IAAIC,WAAW,GAAG,OAAO;EACzB,IAAIC,aAAa,GAAG;IAClB,GAAG,EAAE,IAAI;IACT,GAAG,EAAE;EACP,CAAC;EACD,IAAIC,aAAa,GAAG,CAAC,EAAE,GAAGH,GAAG,EAAEI,OAAO,CAACH,WAAW,EAAE,UAAUI,KAAK,EAAE;IACnE,OAAOH,aAAa,CAACG,KAAK,CAAC;EAC7B,CAAC,CAAC;EAEF,OAAO,GAAG,GAAGF,aAAa;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,QAAQ,CAACN,GAAG,EAAE;EACrB,IAAIO,aAAa,GAAG,UAAU;EAC9B,IAAIC,eAAe,GAAG;IACpB,IAAI,EAAE,GAAG;IACT,IAAI,EAAE;EACR,CAAC;EACD,IAAIC,YAAY,GAAGT,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,GAAGA,GAAG,CAACU,SAAS,CAAC,CAAC,CAAC,GAAGV,GAAG,CAACU,SAAS,CAAC,CAAC,CAAC;EAEzF,OAAO,CAAC,EAAE,GAAGD,YAAY,EAAEL,OAAO,CAACG,aAAa,EAAE,UAAUF,KAAK,EAAE;IACjE,OAAOG,eAAe,CAACH,KAAK,CAAC;EAC/B,CAAC,CAAC;AACJ;AAEA,IAAIM,cAAc,GAAG;EACnBZ,MAAM,EAAEA,MAAM;EACdO,QAAQ,EAAEA;AACZ,CAAC;AAEDM,MAAM,CAACC,OAAO,GAAGF,cAAc"},"metadata":{},"sourceType":"script"}