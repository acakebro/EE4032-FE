{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Coder } from \"./abstract-coder\";\n// Clones the functionality of an existing Coder, but without a localName\nexport var AnonymousCoder = /*#__PURE__*/function (_Coder) {\n  _inherits(AnonymousCoder, _Coder);\n  var _super = _createSuper(AnonymousCoder);\n  function AnonymousCoder(coder) {\n    var _this;\n    _classCallCheck(this, AnonymousCoder);\n    _this = _super.call(this, coder.name, coder.type, undefined, coder.dynamic);\n    _this.coder = coder;\n    return _this;\n  }\n  _createClass(AnonymousCoder, [{\n    key: \"defaultValue\",\n    value: function defaultValue() {\n      return this.coder.defaultValue();\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(writer, value) {\n      return this.coder.encode(writer, value);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(reader) {\n      return this.coder.decode(reader);\n    }\n  }]);\n  return AnonymousCoder;\n}(Coder);","map":{"version":3,"mappings":"AAAA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAEb,SAASA,KAAK,QAAwB,kBAAkB;AAExD;AACA,WAAaC,cAAe;EAAA;EAAA;EAGxB,wBAAYC,KAAY;IAAA;IAAA;IACpB,0BAAMA,KAAK,CAACC,IAAI,EAAED,KAAK,CAACE,IAAI,EAAEC,SAAS,EAAEH,KAAK,CAACI,OAAO;IACtD,MAAKJ,KAAK,GAAGA,KAAK;IAAC;EACvB;EAAC;IAAA;IAAA,OAED,wBAAY;MACR,OAAO,IAAI,CAACA,KAAK,CAACK,YAAY,EAAE;IACpC;EAAC;IAAA;IAAA,OAED,gBAAOC,MAAc,EAAEC,KAAU;MAC7B,OAAO,IAAI,CAACP,KAAK,CAACQ,MAAM,CAACF,MAAM,EAAEC,KAAK,CAAC;IAC3C;EAAC;IAAA;IAAA,OAED,gBAAOE,MAAc;MACjB,OAAO,IAAI,CAACT,KAAK,CAACU,MAAM,CAACD,MAAM,CAAC;IACpC;EAAC;EAAA;AAAA,EAlB+BX,KAAK","names":["Coder","AnonymousCoder","coder","name","type","undefined","dynamic","defaultValue","writer","value","encode","reader","decode"],"sources":["/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@ethersproject/abi/src.ts/coders/anonymous.ts"],"sourcesContent":["\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    private coder: Coder;\n\n    constructor(coder: Coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n\n    defaultValue(): any {\n        return this.coder.defaultValue();\n    }\n\n    encode(writer: Writer, value: any): number {\n        return this.coder.encode(writer, value);\n    }\n\n    decode(reader: Reader): any {\n        return this.coder.decode(reader);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}