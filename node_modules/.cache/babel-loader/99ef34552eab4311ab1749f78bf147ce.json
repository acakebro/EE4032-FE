{"ast":null,"code":"/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\nif (process.env.NODE_ENV !== 'production') {\n  var printWarning = function printWarning(format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n  warning = function warning(condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\nmodule.exports = warning;","map":{"version":3,"names":["emptyFunction","require","warning","process","env","NODE_ENV","printWarning","format","_len","arguments","length","args","Array","_key","argIndex","message","replace","console","error","Error","x","condition","undefined","indexOf","_len2","_key2","apply","concat","module","exports"],"sources":["/Users/hamsterpapa/Documents/GitHub/EE4032-FE/node_modules/fbjs/lib/warning.js"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  var printWarning = function printWarning(format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAiB,CAAC;;AAE9C;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,OAAO,GAAGF,aAAa;AAE3B,IAAIG,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzC,IAAIC,YAAY,GAAG,SAASA,YAAY,CAACC,MAAM,EAAE;IAC/C,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAGC,KAAK,CAACJ,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;MACtGF,IAAI,CAACE,IAAI,GAAG,CAAC,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;IAClC;IAEA,IAAIC,QAAQ,GAAG,CAAC;IAChB,IAAIC,OAAO,GAAG,WAAW,GAAGR,MAAM,CAACS,OAAO,CAAC,KAAK,EAAE,YAAY;MAC5D,OAAOL,IAAI,CAACG,QAAQ,EAAE,CAAC;IACzB,CAAC,CAAC;IACF,IAAI,OAAOG,OAAO,KAAK,WAAW,EAAE;MAClCA,OAAO,CAACC,KAAK,CAACH,OAAO,CAAC;IACxB;IACA,IAAI;MACF;MACA;MACA;MACA,MAAM,IAAII,KAAK,CAACJ,OAAO,CAAC;IAC1B,CAAC,CAAC,OAAOK,CAAC,EAAE,CAAC;EACf,CAAC;EAEDlB,OAAO,GAAG,SAASA,OAAO,CAACmB,SAAS,EAAEd,MAAM,EAAE;IAC5C,IAAIA,MAAM,KAAKe,SAAS,EAAE;MACxB,MAAM,IAAIH,KAAK,CAAC,2DAA2D,GAAG,kBAAkB,CAAC;IACnG;IAEA,IAAIZ,MAAM,CAACgB,OAAO,CAAC,6BAA6B,CAAC,KAAK,CAAC,EAAE;MACvD,OAAO,CAAC;IACV;;IAEA,IAAI,CAACF,SAAS,EAAE;MACd,KAAK,IAAIG,KAAK,GAAGf,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAGC,KAAK,CAACY,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGD,KAAK,EAAEC,KAAK,EAAE,EAAE;QAC7Gd,IAAI,CAACc,KAAK,GAAG,CAAC,CAAC,GAAGhB,SAAS,CAACgB,KAAK,CAAC;MACpC;MAEAnB,YAAY,CAACoB,KAAK,CAACJ,SAAS,EAAE,CAACf,MAAM,CAAC,CAACoB,MAAM,CAAChB,IAAI,CAAC,CAAC;IACtD;EACF,CAAC;AACH;AAEAiB,MAAM,CAACC,OAAO,GAAG3B,OAAO"},"metadata":{},"sourceType":"script"}