{"ast":null,"code":"import _objectSpread from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { interpolate } from 'popmotion';\nvar isCustomValueType = function isCustomValueType(v) {\n  return typeof v === \"object\" && v.mix;\n};\nvar getMixer = function getMixer(v) {\n  return isCustomValueType(v) ? v.mix : undefined;\n};\nfunction transform() {\n  var useImmediate = !Array.isArray(arguments.length <= 0 ? undefined : arguments[0]);\n  var argOffset = useImmediate ? 0 : -1;\n  var inputValue = 0 + argOffset < 0 || arguments.length <= 0 + argOffset ? undefined : arguments[0 + argOffset];\n  var inputRange = 1 + argOffset < 0 || arguments.length <= 1 + argOffset ? undefined : arguments[1 + argOffset];\n  var outputRange = 2 + argOffset < 0 || arguments.length <= 2 + argOffset ? undefined : arguments[2 + argOffset];\n  var options = 3 + argOffset < 0 || arguments.length <= 3 + argOffset ? undefined : arguments[3 + argOffset];\n  var interpolator = interpolate(inputRange, outputRange, _objectSpread({\n    mixer: getMixer(outputRange[0])\n  }, options));\n  return useImmediate ? interpolator(inputValue) : interpolator;\n}\nexport { transform };","map":{"version":3,"names":["interpolate","isCustomValueType","v","mix","getMixer","undefined","transform","useImmediate","Array","isArray","argOffset","inputValue","inputRange","outputRange","options","interpolator","mixer"],"sources":["/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/framer-motion/dist/es/utils/transform.mjs"],"sourcesContent":["import { interpolate } from 'popmotion';\n\nconst isCustomValueType = (v) => {\n    return typeof v === \"object\" && v.mix;\n};\nconst getMixer = (v) => (isCustomValueType(v) ? v.mix : undefined);\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, {\n        mixer: getMixer(outputRange[0]),\n        ...options,\n    });\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,WAAW;AAEvC,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIC,CAAC,EAAK;EAC7B,OAAO,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,CAACC,GAAG;AACzC,CAAC;AACD,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIF,CAAC;EAAA,OAAMD,iBAAiB,CAACC,CAAC,CAAC,GAAGA,CAAC,CAACC,GAAG,GAAGE,SAAS;AAAA,CAAC;AAClE,SAASC,SAAS,GAAU;EACxB,IAAMC,YAAY,GAAG,CAACC,KAAK,CAACC,OAAO,kDAAS;EAC5C,IAAMC,SAAS,GAAGH,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC;EACvC,IAAMI,UAAU,GAAQ,CAAC,GAAGD,SAAS,4BAAb,CAAC,GAAGA,SAAS,yBAAb,CAAC,GAAGA,SAAS,CAAC;EACtC,IAAME,UAAU,GAAQ,CAAC,GAAGF,SAAS,4BAAb,CAAC,GAAGA,SAAS,yBAAb,CAAC,GAAGA,SAAS,CAAC;EACtC,IAAMG,WAAW,GAAQ,CAAC,GAAGH,SAAS,4BAAb,CAAC,GAAGA,SAAS,yBAAb,CAAC,GAAGA,SAAS,CAAC;EACvC,IAAMI,OAAO,GAAQ,CAAC,GAAGJ,SAAS,4BAAb,CAAC,GAAGA,SAAS,yBAAb,CAAC,GAAGA,SAAS,CAAC;EACnC,IAAMK,YAAY,GAAGf,WAAW,CAACY,UAAU,EAAEC,WAAW;IACpDG,KAAK,EAAEZ,QAAQ,CAACS,WAAW,CAAC,CAAC,CAAC;EAAC,GAC5BC,OAAO,EACZ;EACF,OAAOP,YAAY,GAAGQ,YAAY,CAACJ,UAAU,CAAC,GAAGI,YAAY;AACjE;AAEA,SAAST,SAAS"},"metadata":{},"sourceType":"module"}