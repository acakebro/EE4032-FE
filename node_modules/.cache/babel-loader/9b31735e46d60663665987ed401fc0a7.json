{"ast":null,"code":"import _defineProperty from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { isString, singleColorRegex, floatRegex } from '../utils.mjs';\nvar isColorString = function isColorString(type, testProp) {\n  return function (v) {\n    return Boolean(isString(v) && singleColorRegex.test(v) && v.startsWith(type) || testProp && Object.prototype.hasOwnProperty.call(v, testProp));\n  };\n};\nvar splitColor = function splitColor(aName, bName, cName) {\n  return function (v) {\n    var _ref;\n    if (!isString(v)) return v;\n    var _v$match = v.match(floatRegex),\n      _v$match2 = _slicedToArray(_v$match, 4),\n      a = _v$match2[0],\n      b = _v$match2[1],\n      c = _v$match2[2],\n      alpha = _v$match2[3];\n    return _ref = {}, _defineProperty(_ref, aName, parseFloat(a)), _defineProperty(_ref, bName, parseFloat(b)), _defineProperty(_ref, cName, parseFloat(c)), _defineProperty(_ref, \"alpha\", alpha !== undefined ? parseFloat(alpha) : 1), _ref;\n  };\n};\nexport { isColorString, splitColor };","map":{"version":3,"names":["isString","singleColorRegex","floatRegex","isColorString","type","testProp","v","Boolean","test","startsWith","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","a","b","c","alpha","parseFloat","undefined"],"sources":["/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/style-value-types/dist/es/color/utils.mjs"],"sourcesContent":["import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,gBAAgB,EAAEC,UAAU,QAAQ,cAAc;AAErE,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAIC,IAAI,EAAEC,QAAQ;EAAA,OAAK,UAACC,CAAC,EAAK;IAC7C,OAAOC,OAAO,CAAEP,QAAQ,CAACM,CAAC,CAAC,IAAIL,gBAAgB,CAACO,IAAI,CAACF,CAAC,CAAC,IAAIA,CAAC,CAACG,UAAU,CAACL,IAAI,CAAC,IACxEC,QAAQ,IAAIK,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACP,CAAC,EAAED,QAAQ,CAAE,CAAC;EACxE,CAAC;AAAA;AACD,IAAMS,UAAU,GAAG,SAAbA,UAAU,CAAIC,KAAK,EAAEC,KAAK,EAAEC,KAAK;EAAA,OAAK,UAACX,CAAC,EAAK;IAAA;IAC/C,IAAI,CAACN,QAAQ,CAACM,CAAC,CAAC,EACZ,OAAOA,CAAC;IACZ,eAAyBA,CAAC,CAACY,KAAK,CAAChB,UAAU,CAAC;MAAA;MAArCiB,CAAC;MAAEC,CAAC;MAAEC,CAAC;MAAEC,KAAK;IACrB,wCACKP,KAAK,EAAGQ,UAAU,CAACJ,CAAC,CAAC,yBACrBH,KAAK,EAAGO,UAAU,CAACH,CAAC,CAAC,yBACrBH,KAAK,EAAGM,UAAU,CAACF,CAAC,CAAC,kCACfC,KAAK,KAAKE,SAAS,GAAGD,UAAU,CAACD,KAAK,CAAC,GAAG,CAAC;EAE1D,CAAC;AAAA;AAED,SAASnB,aAAa,EAAEW,UAAU"},"metadata":{},"sourceType":"module"}