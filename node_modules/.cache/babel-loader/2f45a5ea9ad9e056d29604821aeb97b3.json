{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n  _assign = require('object-assign');\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\nvar canDefineProperty = require('./canDefineProperty');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar lowPriorityWarning = require('./lowPriorityWarning');\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nReactComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nReactComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;\n  this.updater.enqueueSetState(this, partialState);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'setState');\n  }\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nReactComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'forceUpdate');\n  }\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (process.env.NODE_ENV !== 'production') {\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    if (canDefineProperty) {\n      Object.defineProperty(ReactComponent.prototype, methodName, {\n        get: function () {\n          lowPriorityWarning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n          return undefined;\n        }\n      });\n    }\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactPureComponent(props, context, updater) {\n  // Duplicated from ReactComponent.\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nfunction ComponentDummy() {}\nComponentDummy.prototype = ReactComponent.prototype;\nReactPureComponent.prototype = new ComponentDummy();\nReactPureComponent.prototype.constructor = ReactPureComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(ReactPureComponent.prototype, ReactComponent.prototype);\nReactPureComponent.prototype.isPureReactComponent = true;\nmodule.exports = {\n  Component: ReactComponent,\n  PureComponent: ReactPureComponent\n};","map":{"version":3,"names":["_prodInvariant","require","_assign","ReactNoopUpdateQueue","canDefineProperty","emptyObject","invariant","lowPriorityWarning","ReactComponent","props","context","updater","refs","prototype","isReactComponent","setState","partialState","callback","process","env","NODE_ENV","enqueueSetState","enqueueCallback","forceUpdate","enqueueForceUpdate","deprecatedAPIs","isMounted","replaceState","defineDeprecationWarning","methodName","info","Object","defineProperty","get","undefined","fnName","hasOwnProperty","ReactPureComponent","ComponentDummy","constructor","isPureReactComponent","module","exports","Component","PureComponent"],"sources":["/Users/hamsterpapa/Documents/GitHub/EE4032-FE/node_modules/react-bouncing-text/node_modules/react/lib/ReactBaseClasses.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar canDefineProperty = require('./canDefineProperty');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar lowPriorityWarning = require('./lowPriorityWarning');\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nReactComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nReactComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;\n  this.updater.enqueueSetState(this, partialState);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'setState');\n  }\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nReactComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'forceUpdate');\n  }\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (process.env.NODE_ENV !== 'production') {\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    if (canDefineProperty) {\n      Object.defineProperty(ReactComponent.prototype, methodName, {\n        get: function () {\n          lowPriorityWarning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n          return undefined;\n        }\n      });\n    }\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactPureComponent(props, context, updater) {\n  // Duplicated from ReactComponent.\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = ReactComponent.prototype;\nReactPureComponent.prototype = new ComponentDummy();\nReactPureComponent.prototype.constructor = ReactPureComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(ReactPureComponent.prototype, ReactComponent.prototype);\nReactPureComponent.prototype.isPureReactComponent = true;\n\nmodule.exports = {\n  Component: ReactComponent,\n  PureComponent: ReactPureComponent\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}