{"ast":null,"code":"import _slicedToArray from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\nvar animations = {\n  animation: makeRenderlessComponent(function (_ref) {\n    var visualElement = _ref.visualElement,\n      animate = _ref.animate;\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    if (isAnimationControls(animate)) {\n      useEffect(function () {\n        return animate.subscribe(visualElement);\n      }, [animate]);\n    }\n  }),\n  exit: makeRenderlessComponent(function (props) {\n    var custom = props.custom,\n      visualElement = props.visualElement;\n    var _usePresence = usePresence(),\n      _usePresence2 = _slicedToArray(_usePresence, 2),\n      isPresent = _usePresence2[0],\n      safeToRemove = _usePresence2[1];\n    var presenceContext = useContext(PresenceContext);\n    useEffect(function () {\n      visualElement.isPresent = isPresent;\n      var animation = visualElement.animationState && visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n        custom: presenceContext && presenceContext.custom || custom\n      });\n      if (animation && !isPresent) {\n        animation.then(safeToRemove);\n      }\n    }, [isPresent]);\n  })\n};\nexport { animations };","map":{"version":3,"names":["useEffect","useContext","isAnimationControls","usePresence","PresenceContext","createAnimationState","AnimationType","makeRenderlessComponent","animations","animation","visualElement","animate","animationState","subscribe","exit","props","custom","isPresent","safeToRemove","presenceContext","setActive","Exit","then"],"sources":["/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/framer-motion/dist/es/motion/features/animations.mjs"],"sourcesContent":["import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7C,SAASC,mBAAmB,QAAQ,iDAAiD;AACrF,SAASC,WAAW,QAAQ,mDAAmD;AAC/E,SAASC,eAAe,QAAQ,mCAAmC;AACnE,SAASC,oBAAoB,QAAQ,wCAAwC;AAC7E,SAASC,aAAa,QAAQ,8BAA8B;AAC5D,SAASC,uBAAuB,QAAQ,wCAAwC;AAEhF,IAAMC,UAAU,GAAG;EACfC,SAAS,EAAEF,uBAAuB,CAAC,gBAAgC;IAAA,IAA7BG,aAAa,QAAbA,aAAa;MAAEC,OAAO,QAAPA,OAAO;IACxD;AACR;AACA;AACA;AACA;IACQD,aAAa,CAACE,cAAc,KAAKF,aAAa,CAACE,cAAc,GAAGP,oBAAoB,CAACK,aAAa,CAAC,CAAC;IACpG;AACR;AACA;IACQ,IAAIR,mBAAmB,CAACS,OAAO,CAAC,EAAE;MAC9BX,SAAS,CAAC;QAAA,OAAMW,OAAO,CAACE,SAAS,CAACH,aAAa,CAAC;MAAA,GAAE,CAACC,OAAO,CAAC,CAAC;IAChE;EACJ,CAAC,CAAC;EACFG,IAAI,EAAEP,uBAAuB,CAAC,UAACQ,KAAK,EAAK;IACrC,IAAQC,MAAM,GAAoBD,KAAK,CAA/BC,MAAM;MAAEN,aAAa,GAAKK,KAAK,CAAvBL,aAAa;IAC7B,mBAAkCP,WAAW,EAAE;MAAA;MAAxCc,SAAS;MAAEC,YAAY;IAC9B,IAAMC,eAAe,GAAGlB,UAAU,CAACG,eAAe,CAAC;IACnDJ,SAAS,CAAC,YAAM;MACZU,aAAa,CAACO,SAAS,GAAGA,SAAS;MACnC,IAAMR,SAAS,GAAGC,aAAa,CAACE,cAAc,IAC1CF,aAAa,CAACE,cAAc,CAACQ,SAAS,CAACd,aAAa,CAACe,IAAI,EAAE,CAACJ,SAAS,EAAE;QACnED,MAAM,EAAGG,eAAe,IAAIA,eAAe,CAACH,MAAM,IAC9CA;MACR,CAAC,CAAC;MACN,IAAIP,SAAS,IAAI,CAACQ,SAAS,EAAE;QACzBR,SAAS,CAACa,IAAI,CAACJ,YAAY,CAAC;MAChC;IACJ,CAAC,EAAE,CAACD,SAAS,CAAC,CAAC;EACnB,CAAC;AACL,CAAC;AAED,SAAST,UAAU"},"metadata":{},"sourceType":"module"}