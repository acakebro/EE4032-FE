{"ast":null,"code":"import _objectSpread from \"/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nfunction createUseRender() {\n  var forwardMotionProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var useRender = function useRender(Component, props, projectionId, ref, _ref, isStatic) {\n    var latestValues = _ref.latestValues;\n    var useVisualProps = isSVGComponent(Component) ? useSVGProps : useHTMLProps;\n    var visualProps = useVisualProps(props, latestValues, isStatic);\n    var filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    var elementProps = _objectSpread(_objectSpread(_objectSpread({}, filteredProps), visualProps), {}, {\n      ref: ref\n    });\n    if (projectionId) {\n      elementProps[\"data-projection-id\"] = projectionId;\n    }\n    return createElement(Component, elementProps);\n  };\n  return useRender;\n}\nexport { createUseRender };","map":{"version":3,"names":["createElement","useHTMLProps","filterProps","isSVGComponent","useSVGProps","createUseRender","forwardMotionProps","useRender","Component","props","projectionId","ref","isStatic","latestValues","useVisualProps","visualProps","filteredProps","elementProps"],"sources":["/Users/hamsterpapa/Documents/GitHub/Crowdfunding-Website/node_modules/framer-motion/dist/es/render/dom/use-render.mjs"],"sourcesContent":["import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,OAAO;AACrC,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,WAAW,QAAQ,sBAAsB;AAElD,SAASC,eAAe,GAA6B;EAAA,IAA5BC,kBAAkB,uEAAG,KAAK;EAC/C,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAIC,SAAS,EAAEC,KAAK,EAAEC,YAAY,EAAEC,GAAG,QAAoBC,QAAQ,EAAK;IAAA,IAA7BC,YAAY,QAAZA,YAAY;IAClE,IAAMC,cAAc,GAAGX,cAAc,CAACK,SAAS,CAAC,GAC1CJ,WAAW,GACXH,YAAY;IAClB,IAAMc,WAAW,GAAGD,cAAc,CAACL,KAAK,EAAEI,YAAY,EAAED,QAAQ,CAAC;IACjE,IAAMI,aAAa,GAAGd,WAAW,CAACO,KAAK,EAAE,OAAOD,SAAS,KAAK,QAAQ,EAAEF,kBAAkB,CAAC;IAC3F,IAAMW,YAAY,iDACXD,aAAa,GACbD,WAAW;MACdJ,GAAG,EAAHA;IAAG,EACN;IACD,IAAID,YAAY,EAAE;MACdO,YAAY,CAAC,oBAAoB,CAAC,GAAGP,YAAY;IACrD;IACA,OAAOV,aAAa,CAACQ,SAAS,EAAES,YAAY,CAAC;EACjD,CAAC;EACD,OAAOV,SAAS;AACpB;AAEA,SAASF,eAAe"},"metadata":{},"sourceType":"module"}